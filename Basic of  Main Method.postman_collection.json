{
	"info": {
		"_postman_id": "25ae80e5-0fd6-44e9-9f75-c353d98a84f5",
		"name": "Basic of  Main Method",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27098150",
		"_collection_link": "https://blue-spaceship-335988.postman.co/workspace/a3525302-e878-42e5-a8d0-b5757071873b/collection/27098150-25ae80e5-0fd6-44e9-9f75-c353d98a84f5?action=share&creator=27098150&source=collection_link"
	},
	"item": [
		{
			"name": "Get Request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/names",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"names"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \n        \"first_name\": \"Zahed\",\n        \"second_name\": \"Ahmed\",\n        \"ageId\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/names",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"names"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put  Request",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"first_name\": \"Zahed\",\n    \"second_name\": \"Ahmed\",\n    \"Last_name\": \"Chowdhory\",\n    \"ageId\": 1,\n    \"id\": 9\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}names/9",
					"host": [
						"{{url}}names"
					],
					"path": [
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch Request",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n        \"id\": 4,\n        \"first_name\": \"Marufa\",\n        \"second_name\": \"Akter Eity \",\n        \"ageId\": 1\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}names/4",
					"host": [
						"{{url}}names"
					],
					"path": [
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Request",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}names/7",
					"host": [
						"{{url}}names"
					],
					"path": [
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "Snippets Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Marufa\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData [1].first_name).to.eql(\"Marufa\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}names",
					"host": [
						"{{url}}names"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n       \n        \n        \"second_name\": \"Sharkar\"\n       \n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}names/1",
					"host": [
						"{{url}}names"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Snippets test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Marufa\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].ageId).to.eql(2);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}names/",
					"host": [
						"{{url}}names"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}